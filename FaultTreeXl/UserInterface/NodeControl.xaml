<UserControl x:Class="FaultTreeXl.NodeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FaultTreeXl"
             xmlns:user="clr-namespace:FaultTreeXl.UserInterface"
             mc:Ignorable="d" d:DataContext="{StaticResource GlobalNode}" 
             d:DesignHeight="130" d:DesignWidth="100">
    <UserControl.Resources>

        <Style TargetType="Rectangle" >
            <Setter Property="Fill" Value="Beige" />
            <Setter Property="Stroke" Value="Black" />
        </Style>

        <Style x:Key="ShowSimulation" TargetType="TextBlock">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=DataContext.ShowSimulationResults, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True" >
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ShowCalculation" TargetType="TextBlock">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=DataContext.ShowCalculationResults, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="False" >
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ShowArchiture" TargetType="TextBlock">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=DataContext.ShowArchConstraints, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True"/>
                        <Condition Binding="{Binding IsCCF}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ShowLifeInfo"  TargetType="TextBlock">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ShowLifeInfo}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ShowTypeB" TargetType="TextBlock">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsA}" Value="False"/>
                        <Condition Binding="{Binding IsCCF}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <!--<DataTrigger Binding="{Binding IsA}" Value="False">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>-->
            </Style.Triggers>
        </Style>
        <Style x:Key="ShowTypeA" TargetType="TextBlock">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsA}" Value="True"/>
                        <Condition Binding="{Binding IsCCF}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <!--<DataTrigger Binding="{Binding IsA}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>-->
            </Style.Triggers>
        </Style>

        <Style x:Key="ShowProofTestInfo" TargetType="TextBlock" >
            <Setter Property="Visibility" Value="Visible" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=ProofTestEffectiveness}" Value="1" >
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--<Style x:Key="HideProofTestInfo"  TargetType="TextBlock">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ShowLifeInfo}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>-->

        <Style x:Key="ShowBetaInfo" TargetType="TextBlock" >
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Beta}" Value="0">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Visibility" Value="Visible" />
        </Style>

        <LinearGradientBrush x:Key="NodeNameRectangleGradient" EndPoint="0.5,1.5" StartPoint="0.5,0">
            <GradientStop Color="LightBlue" Offset="0.0"/>
            <GradientStop Color="Beige" Offset="0.2"/>
            <GradientStop Color="LightBlue" Offset="0.8"/>
        </LinearGradientBrush>

    </UserControl.Resources>

    <Grid Name="theGrid" Tag="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
        <Canvas Name="theCanvas" MouseMove="Canvas_MouseMove" AllowDrop="True" Width="100" Height="130"
                DragEnter="theCanvas_DragEnter" 
                DragOver="theCanvas_DragOver"
                DragLeave="theCanvas_DragLeave"
                Drop="theCanvas_Drop">
            <Canvas.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick" Command="{StaticResource OREditCommand}" CommandParameter="{Binding}" />
            </Canvas.InputBindings>
            <Canvas.ContextMenu >
                <ContextMenu>
                    <MenuItem Header="Edit" Command="{StaticResource OREditCommand}" CommandParameter="{Binding}" Icon="{StaticResource EditorIcon}"/>
                    <MenuItem Header="Delete" Command="{StaticResource ORDeleteCommand}" CommandParameter="{Binding}" Icon="{StaticResource DeleteTag}" >
                    </MenuItem>

                    <MenuItem Header="Move Right" Command="{StaticResource MoveRightCommand}" CommandParameter="{Binding}"/>
                    <MenuItem Header="Move Up" Command="{StaticResource MoveUpCommand}" CommandParameter="{Binding}"/>
                    <MenuItem Header="Move Down" Command="{StaticResource MoveDownCommand}" CommandParameter="{Binding}"/>
                    <!--<MenuItem Header="Add Standard Failiure Rate" Command="{StaticResource GetFailRateCommand}" CommandParameter="{Binding}"/>-->
                    <MenuItem Header="Calc CCF" Command="{StaticResource CCFCommand}" CommandParameter="{Binding}" Icon="{StaticResource CCFIcon}">
                        <MenuItem.Style>
                            <Style TargetType="MenuItem" >
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsCCF}" Value="True">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>

                    </MenuItem>
                </ContextMenu>
            </Canvas.ContextMenu>
            <Line X1="50" Y1="-10" X2="50" Y2="0" Stroke="Black"/>
            <Border Name="NodeDescRectangle" BorderBrush="Black" Background="LightBlue" CornerRadius="5,5,5,5" Height="65" Width="100" BorderThickness="1">
                <Rectangle Height="65" Width="100" StrokeThickness="0">
                    <Rectangle.Fill>
                        <SolidColorBrush Color="Transparent" />
                    </Rectangle.Fill>
                </Rectangle>
            </Border>
            <Line X1="50" Y1="65" X2="50" Y2="75" Stroke="Black"/>

            <!-- Beta -->
            <TextBlock Canvas.Left="5" FontFamily="Symbol" Canvas.Top="125"
                       Text="{Binding Path=Beta, StringFormat='b={0}%'}" Style="{StaticResource ShowBetaInfo}" />

            <!-- Node Symbol -->
            <Ellipse Name="NodeSymbol" Height="60" Width="60" Canvas.Left="20" Canvas.Top="70" Stroke="Black" >
                <Ellipse.Style>
                    <Style TargetType="Ellipse" >
                        <Setter Property="Fill" Value="LightBlue" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsCCF}" Value="True">
                                <Setter Property="Fill" Value="HotPink" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>
            </Ellipse>
            <Rectangle Name="NodeNameRectangle" Height="30" Width="90" Canvas.Left="5" Canvas.Top="85" Fill="{StaticResource NodeNameRectangleGradient}">
            </Rectangle>

            <!-- Node Information -->
            <TextBlock Margin="4,3,0,0" Width="92" TextAlignment="Left" 
                       Style="{StaticResource ShowCalculation}">
                <Run Text="{Binding Path=Description, Mode=OneWay}" FontWeight="Bold" TextDecorations="Underline"/>
                <LineBreak />
                <Run >PFD:</Run><Run Text="{Binding Path=PFD,StringFormat=' {0:E2}', Mode=OneWay}"/>
                <LineBreak />
                <Run FontFamily="Symbol">l:</Run><Run Text="{Binding Path=BetaFreeLambda,StringFormat=' {0:E2}', Mode=OneWay}"/>/hr
                <LineBreak/>
                <Run >PTI:</Run><Run Text="{Binding Path=PTI,StringFormat=' {0:###,##0}', Mode=OneWay}"/> hrs
            </TextBlock>

            <!-- Architectural Constraints -->
            <!--<TextBlock Margin="35,135,0,0" Height="15" Width="90" Text="{Binding Path=SFF,StringFormat='SFF: {0:P0}'}" TextAlignment="Left" />-->
            <TextBlock Margin="70,65,0,0" Height="15" Width="90" Text="{Binding Path=ArchSIL,StringFormat='HFT SIL: {0:N0}'}" TextAlignment="Left">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsCCF}" Value="True">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Canvas.Left="5" Canvas.Top="115" Height="15" Width="10" Text="A" 
                       TextAlignment="Left" Style="{StaticResource ShowTypeA}"/>
            <TextBlock Height="15" Width="10" Text="B" TextAlignment="Left" 
                       Canvas.Left="5" Canvas.Top="115"
                       Style="{StaticResource ShowTypeB}">
            </TextBlock>

            <!-- Node Name -->
            <Border Canvas.Left="5" Canvas.Top="85" Height="30" Width="90">
                <TextBlock Text="{Binding Path=Name}" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap"/>
            </Border>

            <!-- Prooftest effectiveness and Lifetime Info-->
            <TextBlock Canvas.Left="80" Canvas.Top="115"  Height="15" Width="100" 
                       Text="{Binding Path=ProofTestEffectiveness, StringFormat='c={0:P0}'}" 
                       TextAlignment="Left" Style="{StaticResource ShowProofTestInfo}"/>
            <TextBlock Canvas.Left="80" Canvas.Top="130"  Height="15" Width="100" 
                       Text="{Binding Path=LifeTime, StringFormat='L={0:###,##0 hrs}'}" 
                       TextAlignment="Left" Style="{StaticResource ShowProofTestInfo}"/>

            <!-- Imperfect Proof Testing Lifetime -->
            <!--<TextBlock Canvas.Left="72" Canvas.Top="110" Height="15" Width="100" 
                       Text="{Binding Path=LifeTime, StringFormat='T: {0:N0} hrs'}" TextAlignment="Left"
                       Style="{StaticResource HideProofTestInfo}"/>-->

            <!-- Architectural Constraints Info -->
            <TextBlock Margin="4,3,0,0" Width="92" TextAlignment="Left" Style="{StaticResource ShowArchiture}">
                <Run Text="{Binding Path=Description, Mode=OneWay}" FontWeight="Bold" TextDecorations="Underline"/>
                <LineBreak />
                <Run FontFamily="Symbol" Text="l"/>
                <Run BaselineAlignment="Subscript" FontSize="8" Text="tot"/>
                <Run Text=""/>
                <Run Text="{Binding Path=TotalFailRate,StringFormat=' {0:E2}/hr', Mode=OneWay}"/>
                <LineBreak />
                <Run FontFamily="Symbol" Text="l"/>
                <Run BaselineAlignment="Subscript" FontSize="8" Text="du"/>
                <Run Text=""/>
                <Run Text="{Binding Path=BetaFreeLambda,StringFormat=' {0:E2}/hr', Mode=OneWay}" />                
                <LineBreak/>
                <Run Text="SFF:"/><Run Text="{Binding Path=SFF,StringFormat=' {0:P1}', Mode=OneWay}"/>
            </TextBlock>

            <TextBlock Margin="0,65,0,0" Text="{Binding FailureCount, StringFormat=' {0:###,##0}'}" Style="{StaticResource ShowSimulation}"/>

            <!-- Simulation Info-->
            <TextBlock Margin="4,3,0,0" Width="92" TextAlignment="Left" Style="{StaticResource ShowSimulation}">
                <Run Text="{Binding Path=Description, Mode=OneWay}" FontWeight="Bold" TextDecorations="Underline"/>
                <LineBreak />
                <Run >PFD:</Run><Run Text="{Binding Path=SimulatedPFD,StringFormat=' {0:E2}', Mode=OneWay}"/>
                <LineBreak />
                <Run FontFamily="Symbol">l:</Run><Run Text="{Binding Path=SimulatedFailureRate,StringFormat=' {0:E2}', Mode=OneWay}"/> /hr
                <LineBreak/>
                <Run >MDT:</Run><Run Text="{Binding Path=SimulatedMeanDowntime,StringFormat=' {0:###,##0}', Mode=OneWay}"/> hrs
            </TextBlock>


        </Canvas>
    </Grid>
</UserControl>
