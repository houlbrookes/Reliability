<UserControl x:Class="FaultTreeXl.ORControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FaultTreeXl" 
             Name="theORControl"
             mc:Ignorable="d" 
             Height="120" Width="100">
    <UserControl.Resources>
        <local:GraphicItem x:Key="theDataContext" X2="0" X3="200" >
        </local:GraphicItem>

        <Style TargetType="Rectangle" >
            <Setter Property="Fill" Value="Beige" />
            <Setter Property="Stroke" Value="Black" />
        </Style>

        <Style x:Key="ShowSimulation" TargetType="TextBlock">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=DataContext.ShowSimulationResults, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True" >
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ShowCalculation" TargetType="TextBlock">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=DataContext.ShowSimulationResults, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True" >
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Grid d:DataContext="{StaticResource theDataContext}">
        <Canvas Name="theCanvas" AllowDrop="True" Width="105" Height="130"
                DragEnter="Canvas_DragEnter" 
                DragOver="Canvas_DragOver" 
                DragLeave="Canvas_DragLeave" 
                Drop="Canvas_Drop" MouseMove="Canvas_MouseMove">
            <Canvas.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick" Command="{StaticResource OREditCommand}" CommandParameter="{Binding}"/>
                <!--<MouseBinding Gesture="LeftClick" Command="{StaticResource SelectCommand}" CommandParameter="{Binding}">
                </MouseBinding>-->
            </Canvas.InputBindings>
            <Canvas.ContextMenu>
                <ContextMenu >
                    <MenuItem Header="Edit" Command="{StaticResource OREditCommand}" CommandParameter="{Binding}" Icon="{StaticResource EditorIcon}"/>
                    <MenuItem Header="Delete" Command="{StaticResource ORDeleteCommand}" CommandParameter="{Binding}" Icon="{StaticResource DeleteTag}"/>
                    <MenuItem Header="Add an AND below" Command="{StaticResource ANDAddCommand}" CommandParameter="{Binding}" Icon="{StaticResource ANDIcon}"/>
                    <MenuItem Header="Add an OR below" Command="{StaticResource ORAddCommand}" CommandParameter="{Binding}" Icon="{StaticResource ORIcon}"/>
                    <MenuItem Header="Add a DU Fault below" Command="{StaticResource NodeAddCommand}" CommandParameter="{Binding}"  Icon="{StaticResource NodeIcon}"/>
                    <MenuItem Header="Add a DD Fault below" Command="{StaticResource DiagnosedFaultAddCommand}" CommandParameter="{Binding}"/>
                    <MenuItem Header="Add a 2oo3 below" Command="{StaticResource Voted2oo3AddCommand}" CommandParameter="{Binding}"/>
                    <MenuItem Header="Move Right" Command="{StaticResource MoveRightCommand}" CommandParameter="{Binding}"/>
                    <MenuItem Header="Move Up" Command="{StaticResource MoveUpCommand}" CommandParameter="{Binding}"/>
                    <MenuItem Header="Move Down" Command="{StaticResource MoveDownCommand}" CommandParameter="{Binding}"/>
                    <MenuItem Header="Show Cut Sets" Command="{StaticResource ShowCutSetsCommand}" CommandParameter="{Binding}"/>
                    <MenuItem Header="Show Calcs (Cut Sets XL)" Command="{StaticResource ShowCalcsCommand}" CommandParameter="{Binding}"/>
                    <MenuItem Header="Show Simple Calcs (XL)" Command="{StaticResource ShowSimpleCalcsCommand}" CommandParameter="{Binding}"/>
                    <MenuItem Header="Toggle Collapsed View" Command="{StaticResource ToggleCollapseCommand}" CommandParameter="{Binding}"/>
                    <MenuItem Header="Show Manual PDF Calculations (Word)" Command="{StaticResource ShowManualCalcsCommand}" CommandParameter="{Binding}" Icon="{StaticResource CalculationMethod}"/>
                    <MenuItem Header="Show Manual λ Calculations (Word)" Command="{StaticResource ShowManualLambdaCalcsCommand}" CommandParameter="{Binding}"/>
                </ContextMenu>
            </Canvas.ContextMenu>
            <Line X1="50" Y1="-10" X2="50" Y2="0" Stroke="Black"/>
            <Border Height="65" Width="100" CornerRadius="5,5,5,5" BorderBrush="Black" BorderThickness="1" Background="Orange">
                <Rectangle Height="65" Width="100" Stroke="Transparent">
                    <Rectangle.Fill>
                        <SolidColorBrush Color="Transparent" />
                    </Rectangle.Fill>
                </Rectangle>
            </Border>
            <Line X1="50" Y1="65" X2="50" Y2="80" Stroke="Black"/>
            <Path Name="ORSymbol" Stroke="Black" Margin="0,15,0,0">
                <Path.Data>
                    <PathGeometry>
                        <PathFigure StartPoint="20,110">
                            <ArcSegment Size="50,50" Point="50,55" SweepDirection="Clockwise"  />
                            <ArcSegment Size="50,50" Point="80,110" SweepDirection="Clockwise"  />
                            <ArcSegment Size="50,50" Point="20,110" SweepDirection="Counterclockwise"  />
                        </PathFigure>
                    </PathGeometry>
                </Path.Data>
                <Path.Fill>
                    <SolidColorBrush Color="Orange" />
                </Path.Fill>
            </Path>
            <Path Stroke="Black" Margin="0,15,0,0">
                <Path.RenderTransform>
                    <TranslateTransform Y="65" />
                </Path.RenderTransform>
                <Path.Data>
                    <PathGeometry>
                        <PathFigure StartPoint="20,110">
                            <LineSegment Point="50,55"/>
                            <LineSegment Point="80,110"/>
                            <LineSegment Point="20,110"/>
                        </PathFigure>
                    </PathGeometry>
                </Path.Data>
                <Path.Fill>
                    <SolidColorBrush Color="Green" />
                </Path.Fill>
                <Path.Style>
                    <Style TargetType="Path">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Collapsed}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path >
            <Rectangle Height="30" Width="90" Canvas.Left="5" Canvas.Top="85">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0.5,1.5" StartPoint="0.5,0">
                        <GradientStop Color="Orange" Offset="-0.10"/>
                        <GradientStop Color="Beige" Offset="0.3"/>
                        <GradientStop Color="Orange" Offset="0.9"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>

            </Rectangle>
            <TextBlock Margin="4,3,0,0" Width="92" TextAlignment="Left" Style="{StaticResource ShowCalculation}">
                <Run Text="{Binding Path=Description, Mode=OneWay}" 
                     FontWeight="Bold" 
                     TextDecorations="Underline"/>
                <LineBreak />
                <Run >PFD:</Run><Run Text="{Binding Path=PFD,StringFormat=' {0:E2}', Mode=OneWay}"/>
                <LineBreak />
                <Run FontFamily="Symbol">l:</Run><Run Text="{Binding Path=Lambda,StringFormat=' {0:E2}', Mode=OneWay}"/> /hr
                <LineBreak/>
                <Run >MDT:</Run><Run Text="{Binding Path=MDT,StringFormat=' {0:###,##0}', Mode=OneWay}"/> hrs
            </TextBlock>

            <TextBlock Margin="65,65,0,0" Height="15" Width="90" Text="{Binding Path=ArchSIL,StringFormat='HFT SIL: {0:N0}'}" TextAlignment="Left"/>

            <Border Canvas.Left="5" Canvas.Top="85" Height="30" Width="90">
                <TextBlock Text="{Binding Path=Name}" 
                         TextAlignment="Center" 
                         VerticalAlignment="Center" 
                         HorizontalAlignment="Center" 
                         TextWrapping="Wrap"/>
            </Border>

            <Line X1="50" Y1="119" X2="50" Y2="135" Stroke="Black" >

            </Line>
            <Line X1="{Binding X2}" Y1="135" X2="{Binding X3}" Y2="135" Stroke="Black">
                <Line.Style>
                    <Style TargetType="Line">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Collapsed}" Value="True">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Line.Style>
            </Line>
            <TextBlock Margin="4,3,0,0" Width="92" TextAlignment="Left" Style="{StaticResource ShowSimulation}">
                <Run Text="{Binding Path=Description, Mode=OneWay}" FontWeight="Bold" TextDecorations="Underline"/>
                <LineBreak />
                <Run >PFD:</Run><Run Text="{Binding Path=SimulatedPFD,StringFormat=' {0:E2}', Mode=OneWay}"/>
                <LineBreak />
                <Run FontFamily="Symbol">l:</Run><Run Text="{Binding Path=SimulatedFailureRate,StringFormat=' {0:E2}', Mode=OneWay}"/> /hr
                <LineBreak/>
                <Run >MDT:</Run><Run Text="{Binding Path=SimulatedMeanDowntime,StringFormat=' {0:###,##0}', Mode=OneWay}"/> hrs
            </TextBlock>
            <TextBlock Margin="0,65,0,0" Text="{Binding FailureCount, StringFormat=' {0:###,##0}'}" Style="{StaticResource ShowSimulation}"/>
        </Canvas>
    </Grid>
</UserControl>
